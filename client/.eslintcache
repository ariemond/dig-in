[{"/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/index.js":"1","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/reportWebVitals.js":"2","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/App.js":"3","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/config/fire.js":"4","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/SignUp/SignUp.jsx":"5","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/Header/Header.jsx":"6","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/ChefList/ChefList.jsx":"7","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/DinerForm/DinerForm.jsx":"8","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/Login/Login.jsx":"9","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/EditProfile/EditProfile.jsx":"10","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/AddChef/AddChef.jsx":"11","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/ChefProfile/ChefProfile.jsx":"12","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/ChefCard/ChefCard.jsx":"13","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/ChefMessages/ChefMessages.jsx":"14","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/DatePicker/DatePicker.jsx":"15","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/AddPhotos/AddPhotos.jsx":"16","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/DeleteModal/DeleteModal.jsx":"17","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/Reviews/Reviews.jsx":"18","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/Dishes/Dishes.jsx":"19","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/MessageModal/MessageModal.jsx":"20"},{"size":478,"mtime":1621115175000,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1621115175000,"results":"23","hashOfConfig":"22"},{"size":2316,"mtime":1646236703266,"results":"24","hashOfConfig":"22"},{"size":596,"mtime":1621115175000,"results":"25","hashOfConfig":"22"},{"size":2066,"mtime":1621115175000,"results":"26","hashOfConfig":"22"},{"size":1638,"mtime":1621115175000,"results":"27","hashOfConfig":"22"},{"size":3351,"mtime":1621115175000,"results":"28","hashOfConfig":"22"},{"size":1906,"mtime":1621115175000,"results":"29","hashOfConfig":"22"},{"size":2045,"mtime":1621115175000,"results":"30","hashOfConfig":"22"},{"size":12351,"mtime":1621115175000,"results":"31","hashOfConfig":"22"},{"size":7664,"mtime":1646236460469,"results":"32","hashOfConfig":"22"},{"size":5386,"mtime":1621115175000,"results":"33","hashOfConfig":"22"},{"size":1428,"mtime":1621115175000,"results":"34","hashOfConfig":"22"},{"size":2184,"mtime":1621115175000,"results":"35","hashOfConfig":"22"},{"size":577,"mtime":1621115175000,"results":"36","hashOfConfig":"22"},{"size":2336,"mtime":1621115175000,"results":"37","hashOfConfig":"22"},{"size":702,"mtime":1621115175000,"results":"38","hashOfConfig":"22"},{"size":3169,"mtime":1621115175000,"results":"39","hashOfConfig":"22"},{"size":1910,"mtime":1621115175000,"results":"40","hashOfConfig":"22"},{"size":2279,"mtime":1621115175000,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"kri7u5",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"44"},"/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/index.js",[],["93","94"],"/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/reportWebVitals.js",[],"/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/App.js",[],"/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/config/fire.js",[],"/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/SignUp/SignUp.jsx",[],"/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/Header/Header.jsx",[],"/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/ChefList/ChefList.jsx",["95","96","97"],"import React, { useState, useEffect } from 'react';\nimport '../ChefList/chefList.scss';\nimport ChefCard from '../ChefCard/ChefCard';\nimport fire from '../../config/fire';\n\n\nfunction ChefList() {\n\n    const db = fire.firestore();\n    let params = (new URL(document.location)).searchParams;\n    let city = params.get('location');\n\n    //Making search input for city case insensitive \n    const uppercaseCity = (city) => {\n        let splitCity = city.split(\" \")\n        let newCity = splitCity.map(word => {\n            word = word.split(\"\")\n            word[0] = word[0].toUpperCase()\n            return word.join(\"\")\n        }) \n        return newCity.join(\" \");\n    };\n\n    //Initial Firebase call to get all chefs that match query\n   const [chefs, setChefs] = useState([]);\n   const [allChefs, setAllChefs] = useState([]);\n   const ref = db.collection('chefs').where(\"location\", \"==\", uppercaseCity(city));\n\n   function getChefs() {\n       ref.onSnapshot((querySnapshot) => {\n           const chefsSnapshot = [];\n           querySnapshot.forEach((doc) => {\n               chefsSnapshot.push({...doc.data(), id: doc.id});\n           });\n           setChefs(chefsSnapshot);\n           setAllChefs(chefsSnapshot);\n       });\n    };\n   \n   useEffect(() => {\n       getChefs(); \n    }, []);\n\n\n    //Restaurant Search Bar\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    \n    const handleChange = e => {\n        setSearchTerm(e.target.value);\n    };\n\n    useEffect(() => {\n        const results = allChefs.filter(chef => \n            chef.restaurant.toLowerCase().includes(searchTerm)\n        );\n        setChefs(results);\n    }, [searchTerm]);\n\n\n    //Cuisine Search Bar\n    const [cuisineSearchTerm, setCuisineSearchTerm] = useState(\"\");\n    \n    const handleCuisineChange = e => {\n        setCuisineSearchTerm(e.target.value);\n    };\n\n    useEffect(() => {\n        const results = allChefs.filter(chef => \n            chef.cuisine.toLowerCase().includes(cuisineSearchTerm)\n        );\n        setChefs(results); \n\n    }, [cuisineSearchTerm]);\n\n\n    return (\n        <section className=\"chefs\">\n            <h2 className=\"chefs__title\">Select a Chef</h2>\n            <div className=\"chefs__search-container\">\n                <input \n                    type=\"text\" \n                    placeholder=\"Search by restaurant\" \n                    className=\"chefs__search-rest\"\n                    value={searchTerm}\n                    onChange={handleChange}/>\n                <input \n                    type=\"text\" \n                    placeholder=\"Search by cuisine\" \n                    className=\"chefs__search\"\n                    value={cuisineSearchTerm}\n                    onChange={handleCuisineChange}/>\n            </div>\n            <div className=\"chefs__list\">\n            {chefs.map((chef) => \n                <ChefCard \n                    id={chef.id}\n                    key={chef.id}\n                    name={chef.name}\n                    image={chef.image}\n                    location={chef.location}\n                    cuisine={chef.cuisine}\n                    restaurant={chef.restaurant}\n                    allergy={chef.allergy}\n                    wage={chef.wage}\n                    rating={chef.rating}/>)}\n            </div>\n        </section>\n    );\n};\n                \n                \nexport default ChefList","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/DinerForm/DinerForm.jsx",[],"/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/Login/Login.jsx",[],"/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/EditProfile/EditProfile.jsx",["98","99","100"],"import React, {useState, useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport '../EditProfile/editProfile.scss';\nimport fire from '../../config/fire';\nimport Modal from 'react-modal';\nimport Modal2 from 'react-responsive-modal';\nimport ChefMessages from '../ChefMessages/ChefMessages';\nimport AddPhotos from '../AddPhotos/AddPhotos';\nimport DeleteModal from '../DeleteModal/DeleteModal';\nimport BookingCalendar from 'react-booking-calendar';\nimport {storage} from '../../config/fire';\nimport 'react-day-picker/lib/style.css';\n\n\n//MUST BE LOGGED IN AS AN EXISTING CHEF TO VIEW THIS PAGE\n//TRY chefali@digin.com, password 123456\n//OR CREATE A CHEF AND THEN VIEW EDIT\n\n\nfunction EditProfile({user}){\n    const [currentChef, setCurrentChef] = useState({});\n    const [isOpen, setOpenModal] = useState(false);\n    const [deleteOpen, setDeleteOpen] = useState(false);\n    const [location, setLocation] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [restaurant, setRestaurant] = useState(\"\");\n    const [wage, setWage] = useState(\"\");\n    const [cuisine, setCuisine] = useState(\"\");\n    const [allergy, setAllergy] = useState(\"\");\n    const [image, setImage] = useState(null);\n    const [url, setURL] = useState(\"\");\n    const [currentDoc, setCurrentDoc] = useState();\n    const [dishes, setDishes] = useState([]);\n\n    const history = useHistory();\n    const db = fire.firestore();\n    const newID = user.uid;\n    const ref = db.collection('chefs').where('id', '==', newID);     //need to target the logged in user with the id field in chef collection that has matching uid\n\n\n    //Get current chef that is logged in, grab the document ID to be able to run update function\n    \n    const getCurrentChef = () => {\n        ref.onSnapshot((querySnapshot) => {\n\n            const chefSnapshot = [];\n            let docID;\n            querySnapshot.forEach((doc) => {\n                chefSnapshot.push({...doc.data(), id: doc.id});\n                docID = doc.id;\n            });\n            setCurrentChef(chefSnapshot[0]);\n            setCurrentDoc(docID);\n        });\n        getEdits();\n    };\n    \n    useEffect(() => {\n        if(user) {\n            getCurrentChef(); \n        }\n     }, []);\n\n     const getEdits = () => {\n         setLocation(currentChef.location);\n         setDescription(currentChef.description);\n         setRestaurant(currentChef.restaurant);\n         setAllergy(currentChef.allergy);\n         setWage(currentChef.wage);\n         setCuisine(currentChef.cuisine);\n    }\n        \n     useEffect(() => {\n        if(currentChef) {\n            getEdits(); \n        }\n     }, [currentChef]);\n     \n\n     function editProfile(e){\n        e.preventDefault();\n        db.doc(`chefs/${currentDoc}`).update({\n                image,\n                description,\n                wage,\n                cuisine,\n                restaurant,\n                allergy,\n                location\n            })\n        .then(res => {\n            history.push(`/chefs/${currentDoc}`);\n            window.scrollTo(0, 0);\n        })\n        .catch((error) => {\n            console.log(`Error: ${error}`);\n        });\n     };\n\n\n    //Upload image\n     const handleImage = e => {\n     setImage(e.target.files[0])\n     };\n\n     const handleUpload = e => {\n        e.preventDefault();\n\n        const uploadTask = storage.ref(`images/${image.name}`).put(image);\n\n        uploadTask.on(\"state_changed\", console.log, console.error, () => {\n            storage\n            .ref(\"images\")\n            .child(image.name)\n            .getDownloadURL()\n            .then((url) => {\n                setImage(url);\n                setURL(url);\n            });\n        });\n     };\n\n\n    //onChange handlers for each input field\n    const handleDescription = e => {\n        setDescription(e.target.value);\n    };\n\n     const handleWage = e => {\n        setWage(e.target.value);\n    };\n\n    const handleRestaurant = e => {\n        setRestaurant(e.target.value);\n    };\n\n    const handleCuisine = e => {\n        setCuisine(e.target.value);\n    };\n\n    const handleLocation = e => {\n        setLocation(e.target.value);\n    };\n\n    const handleAllergy = e => {\n        setAllergy(e.target.value);\n    };\n\n    //Message Modal handlers\n    const handleOpenModal = () => {\n        setOpenModal(true);\n    };\n\n    const handleCloseModal = () => {\n        setOpenModal(false)\n    };\n\n\n    //Photos of dishes\n    useEffect(() => {\n        db.doc(`chefs/${currentDoc}`)\n            .collection(\"photos\")\n            .onSnapshot((querySnapshot) => {\n              const data = querySnapshot.docs.map((doc) => ({\n                ...doc.data(),\n                id: doc.id,\n              }));\n              setDishes(data);\n            });\n        }, []);\n\n\n    //Calendar\n    const bookings = [\n        new Date(2021, 1, 13),\n        new Date(2021, 1, 2),\n        new Date(2021, 1, 14),\n        new Date(2021, 1, 6),\n        new Date(2021, 1, 20),\n        new Date(2021, 1, 11),\n        new Date(2021, 1, 26),\n    ];\n\n\n    //Delete profile\n    const handleDeleteOpen = () => {\n        setDeleteOpen(true);\n    };\n\n    const handleDeleteClose = () => {\n        setDeleteOpen(false)\n    };\n\n    const deleteProfile = () => {\n        db.doc(`chefs/${currentDoc}`)\n        .delete()\n        .then(res => {\n            history.push(`/createprofile`);\n            window.scrollTo(0, 0);\n        })\n        .catch((error) => {\n            console.log(`Error: ${error}`);\n        });\n    };\n    \n\n    if (!user || !currentChef) {\n        return <div></div>\n    }\n\n    return (\n        <div className=\"edit-profile\">\n            <div className=\"edit-profile__card\">\n                <img src={url ? url : currentChef.image} alt=\"Chef\" className=\"edit-profile__image\"/>\n                <div className=\"edit-profile__top-container\"></div>\n                <div className=\"edit-profile__info\">\n                    <div className=\"edit-profile__chef-container\">\n                        <h1 className=\"edit-profile__name\">Welcome Back, Chef {currentChef.name}!</h1>\n                        <button onClick={handleOpenModal} className=\"edit-profile__connect-button\">View Messages</button>\n                        <h2 className=\"edit-profile__edit-header\">Edit Your Profile:</h2>\n                    </div>\n                    <div className=\"edit-profile__wage-container\">\n                        <h4 className=\"edit-profile__add-photo\">Add Photo</h4>\n                        <form onSubmit={handleUpload}>\n                            <label className=\"edit-profile__image-input\">\n                                Choose File\n                                <input className=\"edit-profile__input-button\" type=\"file\" onChange={handleImage} />\n                            </label>\n                            <button className=\"edit-profile__image-button\" disabled={!image}>Upload</button>\n                        </form>\n                    </div>\n                    <form className=\"edit-profile__form\" onSubmit={editProfile}>\n                        <div className=\"edit-profile__about-container\">\n                            <h4 className=\"edit-profile__about\">About Me</h4>\n                            <textarea \n                                className=\"edit-profile__about-input\"\n                                type=\"text\"\n                                name=\"description\"\n                                value={description}\n                                onChange={handleDescription}\n                            />\n                        </div>\n                        <div className=\"edit-profile__wage-container\">\n                            <h4 className=\"edit-profile__wage\">Pricing Per Head</h4>\n                            <input \n                            className=\"edit-profile__wage-input\"\n                            type=\"text\"\n                            name=\"wage\"\n                            value={wage}\n                            onChange={handleWage}/>\n                        </div>\n                        <div className=\"edit-profile__rest-container\">\n                            <h4 className=\"edit-profile__restaurant\">Restaurant</h4>\n                            <input \n                            className=\"edit-profile__rest-input\"\n                            type=\"text\"\n                            name=\"restaurant\"\n                            value={restaurant}\n                            onChange={handleRestaurant}/>\n                        </div>\n                        <div className=\"edit-profile__cuisine-container\">\n                            <h4 className=\"edit-profile__cuisine\">Cuisine</h4>\n                            <input \n                            className=\"edit-profile__cuisine-input\"\n                            type=\"text\"\n                            name=\"cuisine\"\n                            value={cuisine}\n                            onChange={handleCuisine}/>\n                        </div>\n                        <div className=\"edit-profile__cuisine-container\">\n                            <h4 className=\"edit-profile__cuisine\">Location</h4>\n                            <input \n                            className=\"edit-profile__cuisine-input\"\n                            type=\"text\"\n                            name=\"location\"\n                            value={location}\n                            onChange={handleLocation}/>\n                        </div>\n                        <div className=\"edit-profile__allergies\">\n                            <h4 className=\"edit-profile__allergy\">Allergy Friendly</h4>\n                            <select \n                                className=\"edit-profile__allergy-input\" \n                                name=\"allergy\"\n                                id=\"allergy\"\n                                value={allergy}\n                                onChange={handleAllergy}>\n                                <option value={true}>True</option>\n                                <option value={false}>False</option>\n                            </select>\n                        </div>\n                        <div className=\"edit-profile__add-photos\">\n                        {!!dishes ? <AddPhotos dishes={dishes} id={currentDoc} user={user}/> : null}\n                        </div>\n                        <div className=\"edit-profile__calendar-section\">\n                            <h4 className=\"edit-profile__availability\">Update Availability:</h4>\n                            <BookingCalendar\n                                    bookings={bookings}\n                                    clickable={true}\n                                    />\n                            <button className=\"edit-profile__button\">SUBMIT</button>\n                        </div>\n                    </form>\n                    <div className=\"edit-profile__delete\">\n                        <button onClick={handleDeleteOpen} className=\"edit-profile__delete-button\">Delete Profile</button>\n                    </div>\n                </div>\n            </div>\n\n            <Modal\n                isOpen={isOpen}\n                onRequestClose={handleCloseModal}\n                ariaHideApp={false}\n                style={{\n                    content: {\n                    top: \"40%\",\n                    left: \"50%\",\n                    right: \"auto\",\n                    bottom: \"auto\",\n                    marginRight: \"-50%\",\n                    transform: \"translate(-50%, -50%)\",\n                    },\n                }}>\n                    <ChefMessages id={currentDoc} closeModal={handleCloseModal} name={currentChef.name} user={user}/>\n            </Modal>\n\n            <Modal2\n                open={deleteOpen}\n                onClose={handleDeleteClose}\n                ariaHideApp={false}\n                style={{\n                    content: {\n                    top: \"40%\",\n                    left: \"50%\",\n                    right: \"auto\",\n                    bottom: \"auto\",\n                    marginRight: \"-50%\",\n                    transform: \"translate(-50%, -50%)\",\n                    },\n                }}>\n                    <DeleteModal id={currentDoc} closeModal={handleDeleteClose} delete={deleteProfile}/>\n            </Modal2>\n        </div>\n        );\n    };\n                \n\nexport default EditProfile","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/AddChef/AddChef.jsx",["101"],"import React, {useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport '../AddChef/addChef.scss';\nimport fire from '../../config/fire';\nimport 'react-day-picker/lib/style.css';\nimport {storage} from '../../config/fire';\n\n//MUST BE LOGGED IN AS AN EXISTING CHEF TO VIEW THIS PAGE\n//TRY chefjoe@digin.com, password 123456\n\n\nfunction AddChef({user}){\n    const [name, setName] = useState(\"\");\n    const [location, setLocation] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [restaurant, setRestaurant] = useState(\"\");\n    const [wage, setWage] = useState(\"\");\n    const [cuisine, setCuisine] = useState(\"\");\n    const [allergy, setAllergy] = useState(\"\");\n    const [image, setImage] = useState(null);\n    const [url, setURL] = useState(\"\");\n\n    const history = useHistory();\n    const db = fire.firestore();\n    const ref = db.collection('chefs');     //need to target the logged in user with the id field in chef collection that has matching uid\n    \n    \n     function addChef(e){\n        e.preventDefault();\n\n        ref.add({\n            name,\n                image,\n                description,\n                wage,\n                cuisine,\n                restaurant,\n                allergy,\n                location,\n                id: user.uid\n            })\n            .then(res => {\n            const id = res.id;\n            history.push(`/chefs/${id}`);\n            window.scrollTo(0, 0);\n        })\n        .catch((error) => {\n            console.log(`Error: ${error}`);\n        });\n     };\n\n\n     //Upload image\n\n     const handleImage = e => {\n        setImage(e.target.files[0])\n     };\n\n     const handleUpload = e => {\n         e.preventDefault();\n\n         const uploadTask = storage.ref(`images/${image.name}`).put(image);\n\n         uploadTask.on(\"state_changed\", console.log, console.error, () => {\n             storage\n                .ref(\"images\")\n                .child(image.name)\n                .getDownloadURL()\n                .then((url) => {\n                    setImage(url);\n                    setURL(url);\n                });\n         });\n     };\n\n\n    //onChange handlers for each input field\n\n    const handleName = e => {\n        setName(e.target.value);\n    };\n    \n    const handleDescription = e => {\n        setDescription(e.target.value);\n    };\n\n     const handleWage = e => {\n        setWage(e.target.value);\n    };\n\n    const handleRestaurant = e => {\n        setRestaurant(e.target.value);\n    };\n\n    const handleCuisine = e => {\n        setCuisine(e.target.value);\n    };\n\n    const handleLocation = e => {\n        setLocation(e.target.value);\n    };\n\n    const handleAllergy = e => {\n        setAllergy(e.target.value);\n    };\n\n    \n    if (!user) {\n        return <div></div>\n    }\n\n    return (\n        <div className=\"add-chef\">\n            <div className=\"add-chef__card\">\n                <img src={url} alt=\"Upload a photo\" className=\"add-chef__image\"/>\n                <div className=\"add-chef__top-container\"></div>\n                <div className=\"add-chef__info\">\n                    <div className=\"add-chef__chef-container\">\n                        <h1 className=\"add-chef__name\">Create a Chef Profile:</h1>\n                    </div>\n                    <div className=\"add-chef__wage-container\">\n                        <h4 className=\"add-chef__wage\">Add Photo</h4>\n                        <form onSubmit={handleUpload}>\n                            <label className=\"add-chef__image-input\">\n                                Choose File\n                                <input className=\"add-chef__input-button\" type=\"file\" onChange={handleImage} />\n                            </label>\n                            <button className=\"add-chef__image-button\" disabled={!image}>Upload</button>\n                        </form>\n                    </div>\n                    <form className=\"add-chef__form\" onSubmit={addChef}>\n                        <div className=\"add-chef__wage-container\">\n                            <h4 className=\"add-chef__wage\">Name</h4>\n                            <input \n                            className=\"add-chef__wage-input\"\n                            type=\"text\"\n                            name=\"name\"\n                            placeholder=\"First name\"\n                            onChange={handleName}/>\n                        </div>\n                        <div className=\"add-chef__about-container\">\n                            <h4 className=\"add-chef__about\">About Me</h4>\n                            <textarea \n                                className=\"add-chef__about-input\"\n                                type=\"text\"\n                                name=\"description\"\n                                placeholder=\"Tell us a little bit about yourself and the way you like to cook.\"\n                                onChange={handleDescription}/>\n                        </div>\n                        <div className=\"add-chef__wage-container\">\n                            <h4 className=\"add-chef__wage\">Pricing Per Head</h4>\n                            <input \n                            className=\"add-chef__wage-input\"\n                            type=\"text\"\n                            name=\"wage\"\n                            placeholder=\"Ex. 60\"\n                            onChange={handleWage}/>\n                        </div>\n                        <div className=\"add-chef__rest-container\">\n                            <h4 className=\"add-chef__restaurant\">Restaurant</h4>\n                            <input \n                            className=\"add-chef__rest-input\"\n                            type=\"text\"\n                            name=\"restaurant\"\n                            placeholder=\"Ex. Alo\"\n                            onChange={handleRestaurant}/>\n                        </div>\n                        <div className=\"add-chef__cuisine-container\">\n                            <h4 className=\"add-chef__cuisine\">Cuisine</h4>\n                            <input \n                            className=\"add-chef__cuisine-input\"\n                            type=\"text\"\n                            name=\"cuisine\"\n                            placeholder=\"Ex. French\"\n                            onChange={handleCuisine}/>\n                        </div>\n                        <div className=\"add-chef__cuisine-container\">\n                            <h4 className=\"add-chef__cuisine\">Location</h4>\n                            <input \n                            className=\"add-chef__cuisine-input\"\n                            type=\"text\"\n                            name=\"location\"\n                            placeholder=\"City\"\n                            onChange={handleLocation}/>\n                        </div>\n                        <div className=\"add-chef__allergies\">\n                            <h4 className=\"add-chef__allergy\">Allergy Friendly</h4>\n                            <select \n                                className=\"add-chef__allergy-input\" \n                                name=\"allergy\"\n                                id=\"allergy\"\n                                value={allergy}\n                                onChange={handleAllergy}>\n                                <option value={true}>True</option>\n                                <option value={false}>False</option>\n                            </select>\n                        </div>\n                        <button className=\"add-chef__button\">SUBMIT</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n                \n\nexport default AddChef","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/ChefProfile/ChefProfile.jsx",["102","103","104","105","106"],"import React, {useState, useEffect} from 'react';\nimport { useParams} from 'react-router-dom';\nimport '../ChefProfile/chefProfile.scss';\nimport GF from '../../assets/icons/glutenfree.png';\nimport Vegan from '../../assets/icons/vegan.png';\nimport fire from '../../config/fire';\nimport Reviews from '../Reviews/Reviews';\nimport Dishes from '../Dishes/Dishes';\nimport Modal from 'react-modal';\nimport MessageModal from '../MessageModal/MessageModal';\nimport Star from '../../assets/icons/star.png';\nimport axios from 'axios';\n\n\nfunction ChefProfile({user}){\n    const [chef, setChef] = useState({});\n    const {id} = useParams();\n    const [reviews, setReviews] = useState([]);\n    const [dishes, setDishes] = useState([]);\n    const [isOpen, setOpenModal] = useState(false);\n    const db = fire.firestore();\n\n    \n    function getChef() {\n        db.doc(`chefs/${id}`)\n        .get()\n        .then((document) => {\n          setChef(document.data());\n        })\n        .catch((error) => {\n            console.log(`Error: ${error}`);\n        });\n    };\n    \n    useEffect(() => {\n        getChef();\n    }, []);\n\n    useEffect(() => {\n        db.doc(`chefs/${id}`)\n          .collection(\"reviews\")\n          .onSnapshot((querySnapshot) => {\n            const data = querySnapshot.docs.map((doc) => (\n              doc.data()\n            ));\n            setReviews(data);\n          });\n      }, []);\n\n\n    useEffect(() => {\n    db.doc(`chefs/${id}`)\n        .collection(\"photos\")\n        .onSnapshot((querySnapshot) => {\n        const data = querySnapshot.docs.map((doc) => (\n            doc.data()\n        ));\n        setDishes(data);\n        });\n    }, []);\n\n\n    const handleOpenModal = () => {\n    setOpenModal(true);\n    };\n\n    const handleCloseModal = () => {\n        setOpenModal(false)\n    };\n\n    const product = {\n        name: chef.name,\n        price: ((chef.wage * 100) / 2)\n    };\n\n    \n    return (\n    <section className=\"chef-profile\">\n        <div className=\"chef-profile__card\">\n            <img src={chef.image} alt=\"Chef\" className=\"chef-profile__image\"/>\n            <div className=\"chef-profile__top-container\"></div>\n            <div className=\"chef-profile__button-container\">\n                <button onClick={handleOpenModal} className=\"chef-profile__connect-button\">Message     <ion-icon name=\"chatbubbles-outline\"></ion-icon></button>      \n            </div>\n            <div className=\"chef-profile__info\">\n                <div className=\"chef-profile__name-rating\">\n                    <h1 className=\"chef-profile__name\">Chef {chef.name}</h1>\n                        <div className=\"chef-profile__chef-rating\">\n                            <img src={Star} alt=\"Star\" className=\"chef-profile__star\"/>\n                            <img src={Star} alt=\"Star\" className=\"chef-profile__star\"/>\n                            <img src={Star} alt=\"Star\" className=\"chef-profile__star\"/>\n                            <img src={Star} alt=\"Star\" className=\"chef-profile__star\"/>\n                            <img src={Star} alt=\"Star\" className=\"chef-profile__star\"/>\n                        </div>\n                </div>\n                <div className=\"chef-profile__chef-container\">\n                        <a href=\"#reviews\" className=\"chef-profile__top-reviews\">{reviews.length} reviews</a>\n                </div>\n                <div className=\"chef-profile__about-container\">\n                    <h4 className=\"chef-profile__about\">About Me</h4>\n                    <p className=\"chef-profile__about\">{chef.description}</p>\n                </div>\n                <div className=\"chef-profile__wage-container\">\n                    <h4 className=\"chef-profile__wage\">Pricing</h4>\n                    <p className=\"chef-profile__about\">Starting at ${chef.wage} a head.</p>\n                </div>\n                <div className=\"chef-profile__rest-container\">\n                    <h4 className=\"chef-profile__restaurant\">Restaurant</h4>\n                    <p className=\"chef-profile__about\">{chef.restaurant}</p>\n                </div>\n                <div className=\"chef-profile__cuisine-container\">\n                    <h4 className=\"chef-profile__cuisine\">Cuisine</h4>\n                    <p className=\"chef-profile__about\">{chef.cuisine}</p>\n                </div>\n            </div>\n            <div className={chef.allergy === \"true\" ? 'chef-profile__allergies' : 'chef-profile__no-allergies'}>\n                <img src={GF} alt=\"GF\" className=\"chef-profile__allergy\"/>\n                <img src={Vegan} alt=\"GF\" className=\"chef-profile__allergy\"/>\n            </div>\n\n            {!!dishes ? <Dishes dishes={dishes} user={user} name={chef.name} key={chef.id}/> : null}\n            {!!reviews ? <Reviews key={3456} reviews={reviews} amount={reviews.length} name={chef.name} user={user}/> : null}\n\n        </div>\n\n        <Modal\n            isOpen={isOpen}\n            onRequestClose={handleCloseModal}\n            ariaHideApp={false}\n            style={{\n            content: {\n            top: \"40%\",\n            left: \"50%\",\n            right: \"auto\",\n            bottom: \"auto\",\n            marginRight: \"-50%\",\n            transform: \"translate(-50%, -50%)\",\n            },\n            }}>\n            <MessageModal closeModal={handleCloseModal} name={chef.name} user={user}/>\n        </Modal>\n    </section>\n    );\n};\n                \n\nexport default ChefProfile","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/ChefCard/ChefCard.jsx",[],"/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/ChefMessages/ChefMessages.jsx",["107"],"import React, {useEffect, useState} from 'react';\nimport closeButton from '../../assets/icons/close-24px.svg';\nimport '../ChefMessages/chefMessages.scss';\nimport fire from '../../config/fire';\n\n\nfunction ChefMessages({closeModal, id, user}) {\n\n    const db = fire.firestore();\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState(\"\");\n\n\n    useEffect(() => {\n      db.doc(`chefs/${id}`)\n          .collection(\"messages\")\n          .orderBy(\"createdAt\")\n          .limit(50)\n          .onSnapshot((querySnapshot) => {\n            const data = querySnapshot.docs.map((doc) => ({\n              ...doc.data(),\n              id: doc.id,\n            }));\n            setMessages(data);\n          });\n      }, []);\n      \n      const handleOnChange = (event) => {\n        setNewMessage(event.target.value);\n      };\n\n      const handleOnSubmit = (event) => {\n        event.preventDefault();\n        if (db) {\n          db.doc(`chefs/${id}`).collection(\"messages\").add({\n            content: newMessage,\n            createdAt: fire.firestore.FieldValue.serverTimestamp(),\n            uid: user.uid\n          });\n        };\n        setNewMessage(\"\");\n      };\n\n    return (\n        <div className=\"chef-messages\">\n          <div className=\"chef-messages__top\">\n              <h4 className=\"chef-messages__header\">Your Recent Messages</h4>\n          </div>\n          <img onClick={closeModal} className=\"chef-messages__closeButton\" src={closeButton} alt=\"\"/>\n          <div className=\"chef-messages__chat\">\n            {messages.map((message) => (\n              <div key={message.id} className={message.uid === user.uid ? 'chef-messages__sent' : 'chef-messages__received'}>\n                {message.content}\n              </div>\n            ))}\n            <form onSubmit={handleOnSubmit} className=\"chef-messages__form\">\n              <input type=\"text\" value={newMessage} onChange={handleOnChange} placeholder=\"\" className=\"chef-messages__input\"/>\n              <button type=\"submit\" disabled={!newMessage} className=\"chef-messages__button\">Send</button>\n            </form>\n          </div>\n        </div>\n    );\n};\n\nexport default ChefMessages\n","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/DatePicker/DatePicker.jsx",[],"/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/AddPhotos/AddPhotos.jsx",["108","109"],"import React, {useState, useEffect} from 'react'\nimport '../AddPhotos/addPhotos.scss';\nimport fire from '../../config/fire';\nimport {storage} from '../../config/fire';\n\n\nfunction AddPhotos({user, id}) {\n\n  const db = fire.firestore();\n  const [image, setImage] = useState(null);\n  const [dishes, setDishes] = useState([]);\n  const [url, setURL] = useState(\"\");\n\n  useEffect(() => {\n    db.doc(`chefs/${id}`)\n        .collection(\"photos\")\n        .onSnapshot((querySnapshot) => {\n            const data = querySnapshot.docs.map((doc) => (\n                doc.data()\n            ));\n            setDishes(data);\n        });\n    }, [id]);\n    \n    \n    //Upload image\n    const handleImage = e => {\n        setImage(e.target.files[0])\n        };\n\n    const handleUpload = e => {\n        console.log(e)\n        e.preventDefault();\n\n        const uploadTask = storage.ref(`images/${image.name}`).put(image);\n\n        uploadTask.on(\"state_changed\", console.log, console.error, () => {\n            storage\n            .ref(\"images\")\n            .child(image.name)\n            .getDownloadURL()\n            .then((url) => {\n                console.log(url)\n                setImage(url);\n                setURL(url);\n\n                db.doc(`chefs/${id}`).collection(\"photos\").add({\n                    image: url\n                });\n            })\n        });\n    };\n\n\n    if (!user) {\n        return <div></div>\n    }\n   \n    return (\n        <section className=\"add-photos\">\n        <h4 className=\"add-photos__title\">Your Photos</h4>\n            <div className=\"add-photos__wage-container\">\n                <form className=\"add-photos__form\">\n                    <label className=\"add-photos__image-input\">\n                        Choose File\n                        <input className=\"add-photos__input-button\" type=\"file\" onChange={handleImage} />\n                    </label>\n                    <button onClick={handleUpload} className=\"add-photos__image-button\" disabled={!image}>Upload</button>\n                </form>\n            </div>\n            <div className=\"add-photos__photos\">\n                {!!dishes && dishes.map(dish => \n                <img className=\"add-photos__single\" key={dish.id} src={dish.image} alt=\"Chef's Dish\"/>\n                )} \n            </div>\n        </section>\n    );\n};    \n\nexport default AddPhotos","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/DeleteModal/DeleteModal.jsx",[],["110","111"],"/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/Reviews/Reviews.jsx",["112"],"import React, {useRef, useState, useEffect} from 'react'\nimport '../Reviews/reviews.scss';\nimport {useParams} from 'react-router-dom';\nimport fire from '../../config/fire';\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\n\n\nfunction Reviews({user}) {\n\n  const db = fire.firestore()\n  let {id} = useParams();\n  let [reviews, setReviews] = useState([]);\n  const review = useRef();\n  const timestamp = fire.firestore.FieldValue.serverTimestamp();\n  \n  useEffect(() => {\n    db.doc(`chefs/${id}`)\n    .collection(\"reviews\")\n    .orderBy('createdAt', 'desc')\n    .onSnapshot((querySnapshot) => {\n      const data = querySnapshot.docs.map((doc) => (\n        doc.data()\n        ));\n        setReviews(data);\n      });\n    }, []);\n\n    \n    const reviewSubmit = (event) => {\n      event.preventDefault();\n      db.doc(`chefs/${id}`).collection(\"reviews\").add({\n        reviews: review.current.value,\n        from: user.email,                                 //add current user's email to review without input field\n        createdAt: timestamp\n      })\n      .catch((error) => {\n        console.log(`Error: ${error}`);\n      });\n      \n      event.target.reset();\n    };\n\n  //mandatory props for carousel component\n  const responsive = {\n    desktop: {\n      breakpoint: { max: 3000, min: 1200 },\n      items: 1,\n      slidesToSlide: 1 \n    },\n    tablet: {\n      breakpoint: { max: 1200, min: 768 },\n      items: 1,\n      slidesToSlide: 1\n    },\n    mobile: {\n      breakpoint: { max: 768, min: 0 },\n      items: 1,\n      slidesToSlide: 1 \n    }\n  };\n  \n  return (\n    <section className=\"reviews\" id=\"reviews\">\n      <h4 className=\"reviews__title\">Testimonials</h4>\n      <div className=\"reviews__all\">\n        <Carousel \n            swipeable={false}\n            draggable={false}\n            showDots={true}\n            responsive={responsive}\n            ssr={true} \n            infinite={true}\n            autoPlay={false}\n            autoPlaySpeed={1000}\n            keyBoardControl={true}\n            customTransition=\"all .5\"\n            transitionDuration={500}\n            containerClass=\"carousel-container\"\n            removeArrowOnDeviceType={[\"tablet\", \"mobile\", \"desktop\"]}\n            dotListClass=\"custom-dot-list-style\"\n            itemClass=\"carousel-item-padding-50-px\">\n\n            {reviews.map(review => \n              <p className=\"reviews__single\" key={review.createdAt}>\"{review.reviews}\" <br/>- {review.from}</p>\n              )} \n\n        </Carousel>\n      </div>\n      <div className=\"reviews__form-section\">\n        <form className=\"reviews__form\" onSubmit={reviewSubmit}>\n          <label htmlFor=\"name\" className=\"reviews__form-label\">Add a Review:</label>\n          <textarea \n            className=\"reviews__form-review-input\"\n            name=\"review\" \n            id=\"review\" \n            rows=\"5\"\n            wrap=\"hard\"\n            placeholder=\"Tell us about your experience...\"\n            ref={review}\n            required></textarea>\n          <button className=\"reviews__form-button\" type=\"submit\">SUBMIT</button>\n          </form>\n      </div>\n    </section>\n  );\n};\n\n\nexport default Reviews","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/Dishes/Dishes.jsx",["113"],"import React, {useState, useEffect} from 'react'\nimport '../Dishes/dishes.scss';\nimport {useParams} from 'react-router-dom';\nimport fire from '../../config/fire';\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\n\n\nfunction Dishes({name}) {\n\n  const db = fire.firestore()\n  let {id} = useParams();\n  let [dishes, setDishes] = useState([]);\n  \n\n  useEffect(() => {\n    db.doc(`chefs/${id}`)\n    .collection(\"photos\")\n    .onSnapshot((querySnapshot) => {\n      const data = querySnapshot.docs.map((doc) => (\n        doc.data()\n        ));\n        setDishes(data);\n      });\n    }, []);\n\n\n  //mandatory props for carousel component\n  const responsive = {\n    desktop: {\n      breakpoint: { max: 3000, min: 1200 },\n      items: 1,\n      slidesToSlide: 1 \n    },\n    tablet: {\n      breakpoint: { max: 1200, min: 768 },\n      items: 1,\n      slidesToSlide: 1\n    },\n    mobile: {\n      breakpoint: { max: 768, min: 0 },\n      items: 1,\n      slidesToSlide: 1 \n    }\n  };\n   \n  return (\n    <section className=\"dishes\" id=\"dishes\">\n      <h4 className=\"dishes__title\">{name}'s Dishes</h4>\n      <div className=\"dishes__all\">\n        <Carousel \n            swipeable={false}\n            draggable={false}\n            showDots={false}\n            responsive={responsive}\n            ssr={true} \n            infinite={true}\n            autoPlay={false}\n            autoPlaySpeed={1000}\n            keyBoardControl={true}\n            customTransition=\"all .5\"\n            transitionDuration={500}\n            containerClass=\"carousel-container\"\n            dotListClass=\"custom-dot-list-style\"\n            itemClass=\"carousel-item-padding-40-px\">\n\n            {dishes.map(dish => \n              <img className=\"dishes__single\" key={dish.image} src={dish.image} alt=\"Chef's Dish\"/>\n              )} \n\n        </Carousel>\n      </div>\n    </section>\n  );\n};\n\n\nexport default Dishes","/Users/ariana.emond/Desktop/BrainStation/capstone-dig-in/client/src/components/MessageModal/MessageModal.jsx",["114"],"import React, {useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport closeButton from '../../assets/icons/close-24px.svg';\nimport '../MessageModal/messageModal.scss';\nimport fire from '../../config/fire';\n\n\nfunction MessageModal({closeModal, name, user}) {\n    const db = fire.firestore();\n    let {id} = useParams();\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState(\"\");\n\n\n    useEffect(() => {\n        db.doc(`chefs/${id}`)\n          .collection(\"messages\")\n          .orderBy(\"createdAt\")\n          .limit(50)\n          .onSnapshot((querySnapshot) => {\n            const data = querySnapshot.docs.map((doc) => ({\n              ...doc.data(),\n              id: doc.id,\n            }));\n            setMessages(data);\n          });\n    }, []);\n\n      \n    const handleOnChange = (event) => {\n      setNewMessage(event.target.value);\n    };\n\n    //Creates message collection off of each chef document \n    const handleOnSubmit = (event) => {\n      event.preventDefault();\n      if (db) {\n        db.doc(`chefs/${id}`).collection(\"messages\").add({\n          content: newMessage,\n          createdAt: fire.firestore.FieldValue.serverTimestamp(),\n          uid: user.uid\n        });\n      }\n      setNewMessage(\"\");\n    };\n\n    return (\n      <div className=\"message-modal\">\n        <div className=\"message-modal__top\">\n            <h4 className=\"message-modal__header\">Your Chat With Chef {name}</h4>\n        </div>\n        <img onClick={closeModal} className=\"message-modal__closeButton\" src={closeButton} alt=\"\"/>\n        <div className=\"message-modal__chat\">\n            {messages.map((message) => (\n              <div key={message.id} className={message.uid === user.uid ? 'message-modal__sent' : 'message-modal__received'}>\n                {message.content}\n              </div>\n            ))}\n            <form onSubmit={handleOnSubmit} className=\"message-modal__form\">\n              <input type=\"text\" value={newMessage} onChange={handleOnChange} placeholder=\"\" className=\"message-modal__input\"/>\n              <button type=\"submit\" disabled={!newMessage} className=\"message-modal__button\">Send</button>\n            </form>\n        </div>\n      </div>\n    );\n};\n\nexport default MessageModal\n",{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":42,"column":8,"nodeType":"121","endLine":42,"endColumn":10,"suggestions":"122"},{"ruleId":"119","severity":1,"message":"123","line":57,"column":8,"nodeType":"121","endLine":57,"endColumn":20,"suggestions":"124"},{"ruleId":"119","severity":1,"message":"123","line":73,"column":8,"nodeType":"121","endLine":73,"endColumn":27,"suggestions":"125"},{"ruleId":"119","severity":1,"message":"126","line":62,"column":9,"nodeType":"121","endLine":62,"endColumn":11,"suggestions":"127"},{"ruleId":"119","severity":1,"message":"128","line":77,"column":9,"nodeType":"121","endLine":77,"endColumn":22,"suggestions":"129"},{"ruleId":"119","severity":1,"message":"130","line":170,"column":12,"nodeType":"121","endLine":170,"endColumn":14,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":115,"column":17,"nodeType":"134","endLine":115,"endColumn":82},{"ruleId":"135","severity":1,"message":"136","line":12,"column":8,"nodeType":"137","messageId":"138","endLine":12,"endColumn":13},{"ruleId":"119","severity":1,"message":"139","line":37,"column":8,"nodeType":"121","endLine":37,"endColumn":10,"suggestions":"140"},{"ruleId":"119","severity":1,"message":"141","line":48,"column":10,"nodeType":"121","endLine":48,"endColumn":12,"suggestions":"142"},{"ruleId":"119","severity":1,"message":"141","line":60,"column":8,"nodeType":"121","endLine":60,"endColumn":10,"suggestions":"143"},{"ruleId":"135","severity":1,"message":"144","line":71,"column":11,"nodeType":"137","messageId":"138","endLine":71,"endColumn":18},{"ruleId":"119","severity":1,"message":"141","line":26,"column":10,"nodeType":"121","endLine":26,"endColumn":12,"suggestions":"145"},{"ruleId":"135","severity":1,"message":"146","line":12,"column":10,"nodeType":"137","messageId":"138","endLine":12,"endColumn":13},{"ruleId":"119","severity":1,"message":"147","line":23,"column":8,"nodeType":"121","endLine":23,"endColumn":12,"suggestions":"148"},{"ruleId":"115","replacedBy":"149"},{"ruleId":"117","replacedBy":"150"},{"ruleId":"119","severity":1,"message":"141","line":27,"column":8,"nodeType":"121","endLine":27,"endColumn":10,"suggestions":"151"},{"ruleId":"119","severity":1,"message":"141","line":25,"column":8,"nodeType":"121","endLine":25,"endColumn":10,"suggestions":"152"},{"ruleId":"119","severity":1,"message":"141","line":27,"column":8,"nodeType":"121","endLine":27,"endColumn":10,"suggestions":"153"},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getChefs'. Either include it or remove the dependency array.","ArrayExpression",["156"],"React Hook useEffect has a missing dependency: 'allChefs'. Either include it or remove the dependency array.",["157"],["158"],"React Hook useEffect has missing dependencies: 'getCurrentChef' and 'user'. Either include them or remove the dependency array.",["159"],"React Hook useEffect has a missing dependency: 'getEdits'. Either include it or remove the dependency array.",["160"],"React Hook useEffect has missing dependencies: 'currentDoc' and 'db'. Either include them or remove the dependency array.",["161"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getChef'. Either include it or remove the dependency array.",["162"],"React Hook useEffect has missing dependencies: 'db' and 'id'. Either include them or remove the dependency array.",["163"],["164"],"'product' is assigned a value but never used.",["165"],"'url' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'db'. Either include it or remove the dependency array.",["166"],["154"],["155"],["167"],["168"],["169"],"no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"184","fix":"186"},{"desc":"184","fix":"187"},{"desc":"184","fix":"188"},{"desc":"184","fix":"189"},{"desc":"184","fix":"190"},{"desc":"184","fix":"191"},"Update the dependencies array to be: [getChefs]",{"range":"192","text":"193"},"Update the dependencies array to be: [allChefs, searchTerm]",{"range":"194","text":"195"},"Update the dependencies array to be: [allChefs, cuisineSearchTerm]",{"range":"196","text":"197"},"Update the dependencies array to be: [getCurrentChef, user]",{"range":"198","text":"199"},"Update the dependencies array to be: [currentChef, getEdits]",{"range":"200","text":"201"},"Update the dependencies array to be: [currentDoc, db]",{"range":"202","text":"203"},"Update the dependencies array to be: [getChef]",{"range":"204","text":"205"},"Update the dependencies array to be: [db, id]",{"range":"206","text":"207"},{"range":"208","text":"207"},{"range":"209","text":"207"},{"range":"210","text":"207"},{"range":"211","text":"207"},{"range":"212","text":"207"},{"range":"213","text":"207"},[1283,1285],"[getChefs]",[1635,1647],"[allChefs, searchTerm]",[2028,2047],"[allChefs, cuisineSearchTerm]",[2242,2244],"[getCurrentChef, user]",[2647,2660],"[currentChef, getEdits]",[4774,4776],"[currentDoc, db]",[1103,1105],"[getChef]",[1390,1392],"[db, id]",[1650,1652],[749,751],[629,633],[760,762],[620,622],[822,824]]